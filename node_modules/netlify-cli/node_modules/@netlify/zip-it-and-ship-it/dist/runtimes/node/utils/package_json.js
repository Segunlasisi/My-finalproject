"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPackageJson = void 0;
const pkg_dir_1 = __importDefault(require("pkg-dir"));
// Retrieve the `package.json` of a specific project or module
const getPackageJson = function (srcDir) {
    return __awaiter(this, void 0, void 0, function* () {
        const packageRoot = yield (0, pkg_dir_1.default)(srcDir);
        if (packageRoot === undefined) {
            return {};
        }
        const packageJsonPath = `${packageRoot}/package.json`;
        try {
            // The path depends on the user's build, i.e. must be dynamic
            // eslint-disable-next-line import/no-dynamic-require, node/global-require
            return require(packageJsonPath);
        }
        catch (error) {
            throw new Error(`${packageJsonPath} is invalid JSON: ${error.message}`);
        }
    });
};
exports.getPackageJson = getPackageJson;
//# sourceMappingURL=package_json.js.map